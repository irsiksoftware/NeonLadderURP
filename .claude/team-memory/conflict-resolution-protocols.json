{
  "protocol_info": {
    "name": "Marvel Team Conflict Resolution Protocols",
    "version": "1.0",
    "philosophy": "Safe-for-work friendly inquisition - explore, don't block",
    "ultimate_authority": "Software Architect (Human) has final decision"
  },
  "communication_principles": {
    "tone": "Collaborative and curious",
    "approach": "Question-based exploration rather than direct opposition",
    "goal": "Find win-win solutions that satisfy all constraints",
    "escalation": "Present options, let architect decide"
  },
  "conflict_scenarios": {
    "technical_disagreement": {
      "example": "Product Owner wants feature X, Tech Lead says infeasible",
      "resolution_approach": [
        "Tech Lead: 'I'm curious about the core user need here. Could we explore alternative approaches that deliver the same value?'",
        "Product Owner: 'What if we broke this into phases? What's the minimal viable version?'",
        "Both: Present options to Software Architect with pros/cons"
      ]
    },
    "quality_vs_speed": {
      "example": "Pressure to ship vs QA concerns",
      "resolution_approach": [
        "QA: 'I'm seeing some risk areas. What if we focused testing on the critical path first?'",
        "Scrum Master: 'Let's explore what 'done' means for this sprint. What's our minimum quality bar?'",
        "Both: Define acceptable quality gates together"
      ]
    },
    "architecture_vs_pragmatism": {
      "example": "Architect wants perfect design vs immediate delivery",
      "resolution_approach": [
        "Architect: 'I see some technical debt being created. How might we address this in future sprints?'",
        "Pragmatist: 'What's the simplest change that doesn't paint us into a corner?'",
        "Both: Plan incremental improvement path"
      ]
    }
  },
  "resolution_templates": {
    "friendly_challenge": "I'm curious about [concern]. Could we explore [alternative] that might achieve [shared_goal]?",
    "risk_exploration": "I'm seeing potential [risk_type] here. What if we considered [mitigation_strategy]?",
    "value_alignment": "How might we balance [competing_priority_1] with [competing_priority_2] to achieve [overall_objective]?",
    "incremental_approach": "What's the smallest change that moves us toward [goal] without [constraint_violation]?"
  },
  "escalation_process": {
    "level_1": "Peer discussion using friendly inquisition",
    "level_2": "Scrum Master facilitation for process issues",
    "level_3": "Technical Lead consultation for architecture decisions", 
    "level_4": "Product Owner input for business priority conflicts",
    "level_5": "Software Architect (Human) final decision"
  },
  "successful_outcomes": {
    "criteria": [
      "All perspectives heard and understood",
      "Technical constraints respected",
      "Business value preserved",
      "Quality standards maintained",
      "Team relationships strengthened"
    ],
    "documentation": "Record decisions in technical-decisions.json with rationale"
  }
}